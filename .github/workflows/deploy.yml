name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Print current working directory
        run: pwd
      
      - name: List files in the root directory
        run: ls -la
      
      - name: List files in the workflows directory
        run: ls -la .github/workflows/
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .  # Указываем путь к файлу
      
      - name: Run flake8
        run: flake8 .  # Запуск линтера
  
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Print current working directory
        run: pwd
      
      - name: List files in the root directory
        run: ls -la
      
      - name: List files in the workflows directory
        run: ls -la .github/workflows/
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r . # Указываем путь к файлу
          pip install coverage
      
      - name: Run tests
        run: |
          coverage run -m unittest discover  # Запуск тестов
      
      - name: Measure coverage
        run: coverage report  # Отчет о покрытии
  
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Print current working directory
        run: pwd
      
      - name: List files in the root directory
        run: ls -la
      
      - name: List files in the workflows directory
        run: ls -la .github/workflows/
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .  # Указываем путь к файлу
          pip install coverage
      
      - name: Run coverage
        run: |
          coverage run -m unittest discover  # Запуск тестов
          coverage report --fail-under=80
          coverage xml
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Print current working directory
        run: pwd
      
      - name: List files in the root directory
        run: ls -la
      
      - name: List files in the workflows directory
        run: ls -la .github/workflows/
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .  # Указываем путь к файлу
          pip install bandit
      
      - name: Run bandit
        run: bandit -r .  # Проверка безопасности
  
  notify:
    runs-on: ubuntu-latest
    needs: [test, lint, security, coverage]
    if: always()
    steps:
      - name: Send Telegram notification
        run: |
          MESSAGE="CI Pipeline выполнен со статусом: ${{ needs.test.result }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="$MESSAGE"

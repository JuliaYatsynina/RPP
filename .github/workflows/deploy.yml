name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 bandit coverage

      - name: Run tests
        run: pytest

      - name: Run flake8
        run: flake8 .

      - name: Run bandit
        run: bandit -r .

      - name: Run coverage
        run: |
          coverage run -m pytest
          coverage report --fail-under=80
          coverage xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  notify:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    steps:
      - name: Send Telegram notification
        run: |
          MESSAGE="CI Pipeline finished with status: ${{ needs.test.result }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="$MESSAGE"
